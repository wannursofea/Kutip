@model Kutip.Models.Location

@{
    ViewData["Title"] = "Create Location";
}

@* Add Font Awesome for icons *@
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

@* Add Leaflet CSS *@
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />

<style>
    .location-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 2rem 1rem;
    }

    .location-card {
        background: white;
        border: 1px solid #e5e7eb;
        border-radius: 8px;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        padding: 0;
        margin-top: 1.5rem;
    }

    .card-header {
        background: #f9fafb;
        border-bottom: 1px solid #e5e7eb;
        padding: 1.5rem;
        border-radius: 8px 8px 0 0;
    }

    .card-body {
        padding: 1.5rem;
    }

    .card-footer {
        background: #f9fafb;
        border-top: 1px solid #e5e7eb;
        padding: 1rem 1.5rem;
        border-radius: 0 0 8px 8px;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .form-label {
        font-weight: 500;
        color: #374151;
        margin-bottom: 0.5rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

        .form-label i {
            color: #6b7280;
            font-size: 0.875rem;
            width: 16px;
            text-align: center;
        }

    .form-control {
        border: 1px solid #d1d5db;
        border-radius: 6px;
        padding: 0.75rem;
        font-size: 0.875rem;
    }

        .form-control:focus {
            border-color: #3b82f6;
            box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
            outline: none;
        }

    .btn-create {
        background-color: #000;
        border-color: #000;
        color: white;
        padding: 0.75rem 1.5rem;
        border-radius: 6px;
        font-weight: 500;
    }

        .btn-create:hover {
            background-color: #1f2937;
            border-color: #1f2937;
        }

    .btn-outline {
        background-color: transparent;
        border: 1px solid #d1d5db;
        color: #374151;
        padding: 0.5rem 1rem;
        border-radius: 6px;
        text-decoration: none;
        display: inline-block;
    }

        .btn-outline:hover {
            background-color: #f3f4f6;
            text-decoration: none;
            color: #374151;
        }

    .page-title {
        font-size: 1.875rem;
        font-weight: bold;
        color: #111827;
        margin-bottom: 0.5rem;
    }

    .page-subtitle {
        color: #6b7280;
        margin-bottom: 0;
    }

    .section-title {
        font-size: 1.25rem;
        font-weight: 600;
        color: #111827;
        margin-bottom: 0.5rem;
    }

    .section-subtitle {
        color: #6b7280;
        font-size: 0.875rem;
        margin-bottom: 0;
    }

    .map-container {
        height: 400px;
        width: 100%;
        border: 1px solid #d1d5db;
        border-radius: 6px;
        margin-bottom: 1rem;
        z-index: 1;
    }

    .map-instructions {
        background-color: #f0f9ff;
        border: 1px solid #bae6fd;
        color: #0c4a6e;
        padding: 0.75rem;
        border-radius: 6px;
        margin-bottom: 1rem;
        font-size: 0.875rem;
    }

    .search-container {
        position: relative;
        margin-bottom: 1rem;
    }

    .search-input {
        width: 100%;
        padding: 0.75rem 0.75rem 0.75rem 2.5rem;
        border: 1px solid #d1d5db;
        border-radius: 6px;
        font-size: 0.875rem;
    }

    .search-icon {
        position: absolute;
        left: 0.75rem;
        top: 50%;
        transform: translateY(-50%);
        color: #6b7280;
    }

    .search-results {
        position: absolute;
        top: 100%;
        left: 0;
        right: 0;
        background: white;
        border: 1px solid #d1d5db;
        border-top: none;
        border-radius: 0 0 6px 6px;
        max-height: 200px;
        overflow-y: auto;
        z-index: 1000;
        display: none;
    }

    .search-result-item {
        padding: 0.75rem;
        cursor: pointer;
        border-bottom: 1px solid #f3f4f6;
    }

        .search-result-item:hover {
            background-color: #f9fafb;
        }

        .search-result-item:last-child {
            border-bottom: none;
        }

    .clear-btn {
        background-color: #f59e0b;
        border-color: #f59e0b;
        color: white;
        padding: 0.5rem 1rem;
        border-radius: 6px;
        font-size: 0.875rem;
        margin-bottom: 1rem;
        border: none;
        cursor: pointer;
    }

        .clear-btn:hover {
            background-color: #d97706;
            border-color: #d97706;
        }

    .two-column {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 2rem;
    }

    .loading {
        text-align: center;
        padding: 1rem;
        color: #6b7280;
    }

    /* Mobile responsive styles */
    @@media (max-width: 768px) {
        .two-column {
            grid-template-columns: 1fr;
        }

        .card-footer {
            flex-direction: column;
            gap: 0.5rem;
        }

        .location-container {
            padding: 1rem 0.5rem;
        }
    }
</style>

<div class="location-container">
    <h1 class="page-title">Create Location</h1>
    <p class="page-subtitle">Add a new location to the system using the map or manual entry</p>

    @* Display Success Message *@
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert" style="margin-top: 1rem;">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @* Display Error Message *@
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert" style="margin-top: 1rem;">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="location-card">
        <div class="card-header">
            <h3 class="section-title">Location Details</h3>
            <p class="section-subtitle">Click on the map to automatically fill address details or enter manually</p>
        </div>

        <div class="card-body">
            <div class="two-column">
                <!-- Map Section -->
                <div>
                    <h4 style="margin-bottom: 1rem; color: #374151;">
                        <i class="fas fa-map-marked-alt" style="margin-right: 0.5rem;"></i>
                        Interactive Map
                    </h4>

                    <div class="map-instructions">
                        <i class="fas fa-info-circle" style="margin-right: 0.5rem;"></i>
                        Click anywhere on the map to automatically fill the address fields, or search for a specific location in Malaysia.
                    </div>

                    <!-- Search Box -->
                    <div class="search-container">
                        <i class="fas fa-search search-icon"></i>
                        <input type="text" id="searchInput" class="search-input" placeholder="Search for a location in Malaysia...">
                        <div id="searchResults" class="search-results"></div>
                    </div>

                    <!-- Map Container -->
                    <div id="map" class="map-container"></div>

                    <!-- Clear Location Button -->
                    <button type="button" id="clearLocation" class="clear-btn">
                        <i class="fas fa-times" style="margin-right: 0.5rem;"></i>
                        Clear Location
                    </button>
                </div>

                <!-- Form Section -->
                <div>
                    <h4 style="margin-bottom: 1rem; color: #374151;">
                        <i class="fas fa-edit" style="margin-right: 0.5rem;"></i>
                        Address Information
                    </h4>

                    <form asp-action="Create" id="locationForm">
                        <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                        <div class="mb-3">
                            <label asp-for="l_Address1" class="form-label">
                                <i class="fas fa-home"></i>
                                Address Line 1
                            </label>
                            <input asp-for="l_Address1" class="form-control" placeholder="Street address, building name" />
                            <span asp-validation-for="l_Address1" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="l_Address2" class="form-label">
                                <i class="fas fa-building"></i>
                                Address Line 2
                            </label>
                            <input asp-for="l_Address2" class="form-control" placeholder="Unit, floor, apartment (optional)" />
                            <span asp-validation-for="l_Address2" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="l_Postcode" class="form-label">
                                <i class="fas fa-mail-bulk"></i>
                                Postcode
                            </label>
                            <input asp-for="l_Postcode" class="form-control" placeholder="e.g., 50450" maxlength="5" />
                            <span asp-validation-for="l_Postcode" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="l_District" class="form-label">
                                <i class="fas fa-map-marker"></i>
                                District
                            </label>
                            <input asp-for="l_District" class="form-control" placeholder="e.g., Petaling Jaya" />
                            <span asp-validation-for="l_District" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="l_State" class="form-label">
                                <i class="fas fa-flag"></i>
                                State
                            </label>
                            <select asp-for="l_State" class="form-control">
                                <option value="">Select a state</option>
                                <option value="Johor">Johor</option>
                                <option value="Kedah">Kedah</option>
                                <option value="Kelantan">Kelantan</option>
                                <option value="Kuala Lumpur">Kuala Lumpur</option>
                                <option value="Labuan">Labuan</option>
                                <option value="Melaka">Melaka</option>
                                <option value="Negeri Sembilan">Negeri Sembilan</option>
                                <option value="Pahang">Pahang</option>
                                <option value="Penang">Penang</option>
                                <option value="Perak">Perak</option>
                                <option value="Perlis">Perlis</option>
                                <option value="Putrajaya">Putrajaya</option>
                                <option value="Sabah">Sabah</option>
                                <option value="Sarawak">Sarawak</option>
                                <option value="Selangor">Selangor</option>
                                <option value="Terengganu">Terengganu</option>
                            </select>
                            <span asp-validation-for="l_State" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <button type="submit" class="btn btn-create">
                                <i class="fas fa-plus" style="margin-right: 0.5rem;"></i>
                                Create Location
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <div class="card-footer">
            <a asp-action="Index" class="btn-outline">
                <i class="fas fa-arrow-left" style="margin-right: 0.5rem;"></i>
                Cancel
            </a>
            <button type="button" class="btn-outline" onclick="resetForm()">
                <i class="fas fa-redo" style="margin-right: 0.5rem;"></i>
                Reset Form
            </button>
        </div>
    </div>
</div>

<!-- Load Leaflet JavaScript -->
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>

<script>
    let map;
    let marker;
    let searchTimeout;

    // Initialize map
    function initMap() {
        // Create map centered on Malaysia
        map = L.map('map').setView([4.2105, 101.9758], 6);

        // Add OpenStreetMap tiles
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '© <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
            maxZoom: 19
        }).addTo(map);

        // Add click event to map
        map.on('click', function(e) {
            placeMarker(e.latlng);
            reverseGeocode(e.latlng.lat, e.latlng.lng);
        });
    }

    // Place marker on map
    function placeMarker(latlng) {
        if (marker) {
            map.removeLayer(marker);
        }

        marker = L.marker(latlng, {
            draggable: true
        }).addTo(map);

        // Add drag event to marker
        marker.on('dragend', function(e) {
            const position = e.target.getLatLng();
            reverseGeocode(position.lat, position.lng);
        });
    }

    // Reverse geocoding using Nominatim API
    async function reverseGeocode(lat, lng) {
        try {
            const response = await fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}&countrycodes=my&addressdetails=1`);
            const data = await response.json();

            if (data && data.address) {
                fillFormFromNominatim(data);
            }
        } catch (error) {
            console.error('Error in reverse geocoding:', error);
        }
    }

    // Fill form from Nominatim response
    function fillFormFromNominatim(data) {
        const address = data.address;

        // Build address line 1
        let address1 = '';
        if (address.house_number) address1 += address.house_number + ' ';
        if (address.road) address1 += address.road;
        if (!address1 && address.neighbourhood) address1 = address.neighbourhood;
        if (!address1 && address.suburb) address1 = address.suburb;

        // Get other components
        const postcode = address.postcode || '';
        const district = address.city || address.town || address.village || address.suburb || '';
        const state = address.state || '';

        // Fill form fields
        document.getElementById('l_Address1').value = address1;
        document.getElementById('l_Postcode').value = postcode;
        document.getElementById('l_District').value = district;

        // Match state with dropdown options
        const stateSelect = document.getElementById('l_State');
        const stateOptions = Array.from(stateSelect.options);
        const matchedState = stateOptions.find(option =>
            option.value.toLowerCase().includes(state.toLowerCase()) ||
            state.toLowerCase().includes(option.value.toLowerCase())
        );

        if (matchedState) {
            stateSelect.value = matchedState.value;
        }
    }

    // Search functionality
    document.getElementById('searchInput').addEventListener('input', function(e) {
        const query = e.target.value.trim();

        if (searchTimeout) {
            clearTimeout(searchTimeout);
        }

        if (query.length < 3) {
            hideSearchResults();
            return;
        }

        searchTimeout = setTimeout(() => {
            searchLocation(query);
        }, 500);
    });

    // Search for location using Nominatim
    async function searchLocation(query) {
        try {
            const response = await fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(query + ' Malaysia')}&countrycodes=my&limit=5&addressdetails=1`);
            const data = await response.json();

            displaySearchResults(data);
        } catch (error) {
            console.error('Error searching location:', error);
        }
    }

    // Display search results
    function displaySearchResults(results) {
        const resultsContainer = document.getElementById('searchResults');
        resultsContainer.innerHTML = '';

        if (results.length === 0) {
            resultsContainer.innerHTML = '<div class="search-result-item">No results found</div>';
            resultsContainer.style.display = 'block';
            return;
        }

        results.forEach(result => {
            const item = document.createElement('div');
            item.className = 'search-result-item';
            item.textContent = result.display_name;
            item.addEventListener('click', () => {
                selectSearchResult(result);
            });
            resultsContainer.appendChild(item);
        });

        resultsContainer.style.display = 'block';
    }

    // Select search result
    function selectSearchResult(result) {
        const lat = parseFloat(result.lat);
        const lng = parseFloat(result.lon);

        // Center map and place marker
        map.setView([lat, lng], 15);
        placeMarker(L.latLng(lat, lng));

        // Fill form
        fillFormFromNominatim(result);

        // Hide search results and clear search input
        hideSearchResults();
        document.getElementById('searchInput').value = result.display_name.split(',')[0];
    }

    // Hide search results
    function hideSearchResults() {
        document.getElementById('searchResults').style.display = 'none';
    }

    // Clear form
    function clearForm() {
        document.getElementById('l_Address1').value = '';
        document.getElementById('l_Address2').value = '';
        document.getElementById('l_Postcode').value = '';
        document.getElementById('l_District').value = '';
        document.getElementById('l_State').value = '';
    }

    // Reset form and map
    function resetForm() {
        clearForm();
        if (marker) {
            map.removeLayer(marker);
            marker = null;
        }
        document.getElementById('searchInput').value = '';
        hideSearchResults();

        // Reset map to Malaysia center
        map.setView([4.2105, 101.9758], 6);
    }

    // Clear location button
    document.getElementById('clearLocation').addEventListener('click', function() {
        resetForm();
    });

    // Restrict postcode to numbers only
    document.getElementById('l_Postcode').addEventListener('input', function(e) {
        this.value = this.value.replace(/[^0-9]/g, '');
    });

    // Hide search results when clicking outside
    document.addEventListener('click', function(e) {
        if (!e.target.closest('.search-container')) {
            hideSearchResults();
        }
    });

    // Initialize map when page loads
    document.addEventListener('DOMContentLoaded', function() {
        initMap();
    });
</script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}