@model Kutip.Models.Schedule

@{
    ViewData["Title"] = "Schedule Details";
    var today = DateTime.Today;
    var relatedSchedules = ViewBag.RelatedSchedules as List<Kutip.Models.Schedule>;
    var isOperator = (bool)ViewBag.IsOperator;
    var totalBins = (int)ViewBag.TotalBins;
    var totalPickedUpBins = (int)ViewBag.TotalPickedUpBins;
    var completionPercentage = (double)ViewBag.CompletionPercentage;
    var status = ViewBag.Status as string;
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

<style>
    .schedule-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 2rem 1rem;
    }

    .schedule-card {
        background: white;
        border: 1px solid #e5e7eb;
        border-radius: 8px;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        padding: 0;
        margin-bottom: 1.5rem;
    }

    .card-header {
        background: #f9fafb;
        border-bottom: 1px solid #e5e7eb;
        padding: 1.5rem;
        border-radius: 8px 8px 0 0;
    }

    .card-body {
        padding: 1.5rem;
    }

    .card-footer {
        background: #f9fafb;
        border-top: 1px solid #e5e7eb;
        padding: 1rem 1.5rem;
        border-radius: 0 0 8px 8px;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .section-title {
        font-size: 1.25rem;
        font-weight: 600;
        color: #111827;
        margin-bottom: 0.5rem;
    }

    .section-subtitle {
        color: #6b7280;
        font-size: 0.875rem;
        margin-bottom: 0;
    }

    .info-badge {
        background-color: #e3f2fd;
        color: #1565c0;
        padding: 0.75rem;
        border-radius: 6px;
        font-size: 0.875rem;
        margin-bottom: 1rem;
    }

    .status-badge {
        display: inline-block;
        padding: 0.5rem 1rem;
        border-radius: 9999px;
        font-size: 0.875rem;
        font-weight: 500;
        text-transform: uppercase;
        letter-spacing: 0.05em;
    }

        .status-badge.completed {
            background-color: #d1fae5;
            color: #065f46;
        }

        .status-badge.scheduled {
            background-color: #fef3c7;
            color: #92400e;
        }

        .status-badge.in-progress {
            background-color: #dbeafe;
            color: #1e40af;
        }

        .status-badge.past-due {
            background-color: #fee2e2;
            color: #991b1b;
        }

    .progress-bar {
        width: 100%;
        height: 20px;
        background-color: #e5e7eb;
        border-radius: 10px;
        overflow: hidden;
        margin: 0.5rem 0;
    }

    .progress-fill {
        height: 100%;
        background: linear-gradient(90deg, #10b981, #059669);
        transition: width 0.3s ease;
        border-radius: 10px;
    }

    .stats-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 1rem;
        margin-bottom: 2rem;
    }

    .stat-card {
        background: white;
        border: 1px solid #e5e7eb;
        border-radius: 8px;
        padding: 1.5rem;
        text-align: center;
    }

        .stat-card .stat-value {
            font-size: 2rem;
            font-weight: bold;
            color: #111827;
            margin-bottom: 0.5rem;
        }

        .stat-card .stat-label {
            color: #6b7280;
            font-size: 0.875rem;
            text-transform: uppercase;
            letter-spacing: 0.05em;
        }

        .stat-card .stat-icon {
            font-size: 2rem;
            margin-bottom: 1rem;
        }

            .stat-card .stat-icon.completed {
                color: #10b981;
            }

            .stat-card .stat-icon.scheduled {
                color: #f59e0b;
            }

            .stat-card .stat-icon.in-progress {
                color: #3b82f6;
            }

            .stat-card .stat-icon.past-due {
                color: #ef4444;
            }

    .bin-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 1rem;
    }

    .bin-card {
        background: white;
        border: 1px solid #e5e7eb;
        border-radius: 8px;
        padding: 1rem;
        transition: all 0.2s ease;
    }

        .bin-card:hover {
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            transform: translateY(-2px);
        }

        .bin-card.completed {
            border-left: 4px solid #10b981;
            background-color: #f0fdf4;
        }

        .bin-card.pending {
            border-left: 4px solid #f59e0b;
            background-color: #fffbeb;
        }

    .bin-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 0.75rem;
    }

    .bin-plate {
        font-weight: 600;
        font-size: 1.1rem;
        color: #111827;
    }

    .bin-status {
        font-size: 0.75rem;
        padding: 0.25rem 0.5rem;
        border-radius: 4px;
        text-transform: uppercase;
        font-weight: 500;
    }

        .bin-status.completed {
            background-color: #d1fae5;
            color: #065f46;
        }

        .bin-status.pending {
            background-color: #fef3c7;
            color: #92400e;
        }

    .bin-location {
        color: #6b7280;
        font-size: 0.875rem;
        margin-bottom: 0.5rem;
    }

    .btn-outline {
        background-color: transparent;
        border: 1px solid #d1d5db;
        color: #374151;
        padding: 0.5rem 1rem;
        border-radius: 6px;
        text-decoration: none;
        display: inline-block;
        margin-right: 0.5rem;
    }

        .btn-outline:hover {
            background-color: #f3f4f6;
            text-decoration: none;
            color: #374151;
        }

    .btn-primary {
        background-color: #3b82f6;
        border: 1px solid #3b82f6;
        color: white;
        padding: 0.5rem 1rem;
        border-radius: 6px;
        text-decoration: none;
        display: inline-block;
        margin-right: 0.5rem;
    }

        .btn-primary:hover {
            background-color: #2563eb;
            border-color: #2563eb;
            color: white;
            text-decoration: none;
        }
</style>

<div class="schedule-container">
    <div class="schedule-card">
        <div class="card-header">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h3 class="section-title">Schedule Group Details</h3>
                    <p class="section-subtitle">Complete overview of the pickup session</p>
                </div>
                <div>
                    @{
                        var statusClass = status.ToLower().Replace(" ", "-");
                    }
                    <span class="status-badge @statusClass">@status</span>
                </div>
            </div>
        </div>

        <div class="card-body">
            <div class="info-badge">
                <i class="fas fa-info-circle me-2"></i>
                <strong>Pickup Session:</strong>
                @if (Model.AssignedUser != null)
                {
                    <span>@Model.AssignedUser.Name</span>
                }
                @if (Model.Truck != null)
                {
                    <span>with Truck @Model.Truck.t_PlateNo</span>
                }
                on @Model.s_Date.ToString("dd/MM/yyyy")
                from @Model.s_PickupTime.ToString("hh\\:mm") to @Model.s_PickupEnd.ToString("hh\\:mm")
                @if (Model.Location != null)
                {
                    <span>at @Model.Location.l_Address2</span>
                }
            </div>

            <div class="stats-grid">
                <div class="stat-card">
                    <div class="stat-icon @statusClass">
                        <i class="fas fa-calendar-check"></i>
                    </div>
                    <div class="stat-value">@totalBins</div>
                    <div class="stat-label">Total Bins</div>
                </div>
                <div class="stat-card">
                    <div class="stat-icon completed">
                        <i class="fas fa-check-circle"></i>
                    </div>
                    <div class="stat-value">@totalPickedUpBins</div>
                    <div class="stat-label">Picked Up</div>
                </div>
                <div class="stat-card">
                    <div class="stat-icon in-progress">
                        <i class="fas fa-clock"></i>
                    </div>
                    <div class="stat-value">@(totalBins - totalPickedUpBins)</div>
                    <div class="stat-label">Remaining</div>
                </div>
                <div class="stat-card">
                    <div class="stat-icon @statusClass">
                        <i class="fas fa-percentage"></i>
                    </div>
                    <div class="stat-value">@completionPercentage.ToString("F0")%</div>
                    <div class="stat-label">Completion</div>
                </div>
            </div>

            <div class="mb-4">
                <div class="d-flex justify-content-between align-items-center mb-2">
                    <span class="fw-semibold">Overall Progress</span>
                    <span class="text-muted">@totalPickedUpBins / @totalBins bins</span>
                </div>
                <div class="progress-bar">
                    <div class="progress-fill" style="width: @completionPercentage.ToString("F1")%"></div>
                </div>
            </div>
        </div>
    </div>

    <div class="schedule-card">
        <div class="card-header">
            <h4 class="section-title">Individual Bin Details</h4>
            <p class="section-subtitle">Status of each bin in this pickup session</p>
        </div>
        <div class="card-body">
            <div class="bin-grid">
                @if (relatedSchedules != null)
                {
                    @foreach (var schedule in relatedSchedules)
                    {
                        var binCompleted = schedule.PickedUpBins >= schedule.TotalBins;
                        var binCardClass = binCompleted ? "completed" : "pending";
                        var binStatusClass = binCompleted ? "completed" : "pending";
                        var binStatusText = binCompleted ? "Completed" : "Pending";

                        <div class="bin-card @binCardClass">
                            <div class="bin-header">
                                <div class="bin-plate">
                                    <i class="fas fa-truck me-2"></i>
                                    @(schedule.Bin?.b_PlateNo ?? "Unknown")
                                </div>
                                <span class="bin-status @binStatusClass">@binStatusText</span>
                            </div>

                            @if (schedule.Bin?.Location != null)
                            {
                                <div class="bin-location">
                                    <i class="fas fa-map-marker-alt me-1"></i>
                                    @schedule.Bin.Location.l_Address1, @schedule.Bin.Location.l_Address2
                                </div>
                            }

                            <div class="bin-progress">
                                <small class="text-muted">
                                    Progress: @schedule.PickedUpBins / @schedule.TotalBins
                                    @if (schedule.TotalBins > 0)
                                    {
                                        <span>(@((schedule.PickedUpBins * 100 / schedule.TotalBins).ToString("F0"))%)</span>
                                    }
                                </small>
                            </div>

                            @if (isOperator)
                            {
                                <div class="mt-2">
                                    <a asp-action="Edit" asp-route-id="@schedule.s_ID" class="btn btn-sm btn-outline-primary">
                                        <i class="fas fa-edit me-1"></i>Edit
                                    </a>
                                </div>
                            }
                        </div>
                    }
                }
            </div>
        </div>
    </div>

    <div class="schedule-card">
        <div class="card-footer">
            <div>
                <a asp-action="Index" class="btn-outline">
                    <i class="fas fa-arrow-left me-2"></i>Back to List
                </a>
            </div>
            <div>
                @if (isOperator)
                {
                    <a asp-action="Edit" asp-route-id="@Model.s_ID" class="btn-primary">
                        <i class="fas fa-edit me-2"></i>Edit Group
                    </a>
                    <a asp-action="Delete" asp-route-id="@Model.s_ID" class="btn-outline"
                       onclick="return confirm('Are you sure you want to delete this entire schedule group?')">
                        <i class="fas fa-trash me-2"></i>Delete Group
                    </a>
                }
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const progressFill = document.querySelector('.progress-fill');
        if (progressFill) {
            const targetWidth = progressFill.style.width;
            progressFill.style.width = '0%';
            setTimeout(() => {
                progressFill.style.width = targetWidth;
            }, 500);
        }
    });
</script>
