@model IEnumerable<Kutip.Models.Schedule>

@{
    ViewData["Title"] = "Schedules";
    var today = DateTime.Today;
    var todaysSchedules = Model.Where(s => s.s_Date.Date == today).ToList();
    var pendingCount = todaysSchedules.Count();
    var totalPickedUp = todaysSchedules.Sum(s => s.PickedUpBins);
    var totalBins = todaysSchedules.Sum(s => s.TotalBins);
    var pickupPercent = totalBins > 0 ? (int)((double)totalPickedUp / totalBins * 100) : 0;
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">

<style>
    .btn-black {
        background-color: #000000;
        border-color: #000000;
        color: white;
    }

        .btn-black:hover {
            background-color: #333333;
            border-color: #333333;
            color: white;
        }

        .btn-black:focus, .btn-black:active {
            background-color: #000000;
            border-color: #000000;
            color: white;
            box-shadow: 0 0 0 0.2rem rgba(0, 0, 0, 0.25);
        }

    .location-dropdown {
        position: absolute;
        z-index: 1000;
        width: 100%;
        max-height: 200px;
        overflow-y: auto;
        background: white;
        border: 1px solid #ced4da;
        border-radius: 0.375rem;
        box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
    }

        .location-dropdown option {
            padding: 8px 12px;
            cursor: pointer;
        }

            .location-dropdown option:hover {
                background-color: #f8f9fa;
            }

    .status-badge-complete {
        background-color: #e3fcef !important;
        color: #0f5132 !important;
        border: 1px solid #a3e9c6 !important;
    }

    .status-badge-partial {
        background-color: #fff3cd !important;
        color: #856404 !important;
        border: 1px solid #ffeaa7 !important;
    }

    .status-badge-pending {
        background-color: #f8d7da !important;
        color: #721c24 !important;
        border: 1px solid #f1aeb5 !important;
    }
</style>

<div class="container-fluid p-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="mb-1">Schedules</h1>
            <p class="text-muted mb-0">Manage your pickup schedules and track status</p>
        </div>
        <div class="text-end">
            <p class="text-muted mb-0">@DateTime.Today.ToString("dd/MM/yyyy")</p>
            <a asp-action="Create" class="btn btn-success">
                <i class="fas fa-plus me-2"></i>Create New Schedule
            </a>
        </div>
    </div>

    <!-- Dashboard Cards Row -->
    <!-- Dashboard Cards Row -->
    <div class="row mb-4">
        <div class="col-md-4">
            <div class="card">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center mb-1">
                        <h6 class="card-subtitle text-muted mb-0">Today's Schedules</h6>
                        <i class="fas fa-calendar fa-lg text-success" style="margin-top: 8px;"></i>
                    </div>
                    <h2 class="mb-0 text-dark">@pendingCount</h2>
                    <small class="text-muted">Active schedules for today</small>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center mb-1">
                        <h6 class="card-subtitle text-muted mb-0">Pickup Progress</h6>
                        <i class="fas fa-box fa-lg text-primary" style="margin-top: 8px;"></i>
                    </div>
                    <h2 class="mb-0 text-dark">@totalPickedUp/@totalBins</h2>
                    <small class="text-muted">Completed pickups today</small>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center mb-1">
                        <h6 class="card-subtitle text-muted mb-0">Completion Rate</h6>
                        <i class="fas fa-clock fa-lg text-warning" style="margin-top: 8px;"></i>
                    </div>
                    <h2 class="mb-0 text-dark">@pickupPercent%</h2>
                    <small class="text-muted">Overall completion rate</small>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- Filters Column -->
        <div class="col-lg-3 col-md-4 mb-4">
            <div class="card">
                <div class="card-header bg-white">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-filter me-2"></i>Filter Schedules
                    </h5>
                </div>
                <div class="card-body">
                    <form method="get" action="@Url.Action("Index")" id="filterForm">
                        <div class="mb-3">
                            <label class="form-label fw-semibold">Date Range</label>
                            <input type="date" id="date" name="date" class="form-control" value="@ViewBag.SelectedDate" />
                        </div>
                        <div class="mb-3">
                            <label class="form-label fw-semibold">Location</label>
                            <div class="position-relative">
                                <div class="input-group">
                                    <span class="input-group-text"><i class="fas fa-map-marker-alt"></i></span>
                                    <input type="text" id="locationInput" name="locationSearch" class="form-control" placeholder="Search location..." onkeyup="filterLocations()" autocomplete="off" value="@ViewBag.SelectedLocationSearch" />
                                </div>
                                <select id="locationDropdown" name="location" class="form-select location-dropdown mt-1" size="5" style="display:none;" onchange="selectLocation(this)"></select>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label class="form-label fw-semibold">Status</label>
                            <select class="form-select" name="status">
                                <option value="" selected="@(string.IsNullOrEmpty(ViewBag.SelectedStatus))">All statuses</option>
                                <option value="Complete" selected="@(ViewBag.SelectedStatus == "Complete")">Complete</option>
                                <option value="Partial" selected="@(ViewBag.SelectedStatus == "Partial")">Partial</option>
                                <option value="Pending" selected="@(ViewBag.SelectedStatus == "Pending")">Pending</option>
                            </select>
                        </div>
                        <button type="submit" class="btn btn-black w-100">
                            <i class="fas fa-search me-2"></i>Apply Filters
                        </button>
                    </form>
                </div>
            </div>
        </div>

        <!-- Schedule List Column -->
        <div class="col-lg-9 col-md-8">
            <div class="card">
                <div class="card-header bg-white d-flex justify-content-between align-items-center">
                    <h5 class="card-title mb-0">Schedule List</h5>
                    <div class="input-group" style="width: 250px;">
                        <span class="input-group-text"><i class="fas fa-search"></i></span>
                        <input type="text" class="form-control" placeholder="Search schedules..." id="searchInput" onkeyup="searchSchedules()">
                    </div>
                </div>
                <div class="card-body p-0">
                    <div class="table-responsive">
                        <table class="table table-hover mb-0" id="schedulesTable">
                            <thead class="table-light">
                                <tr>
                                    <th>Date & Day</th>
                                    <th>Time Slot</th>
                                    <th>Location</th>
                                    <th>Status</th>
                                    <th class="text-center">Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model != null && Model.Any())
                                {
                                    @foreach (var item in Model.OrderByDescending(m => m.s_Date))
                                    {
                                        var statusClass = "";
                                        var statusText = $"{item.PickedUpBins}/{item.TotalBins}";

                                        if (item.PickedUpBins == item.TotalBins && item.TotalBins > 0)
                                        {
                                            statusClass = "status-badge-complete";
                                        }
                                        else if (item.PickedUpBins > 0)
                                        {
                                            statusClass = "status-badge-partial";
                                        }
                                        else
                                        {
                                            statusClass = "status-badge-pending";
                                        }

                                        <tr>
                                            <td>
                                                <div class="fw-bold">@item.s_Date.ToString("dd/MM/yyyy")</div>
                                                <div class="text-muted small">@item.s_Day</div>
                                            </td>
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    <i class="fas fa-clock me-2 text-muted"></i>
                                                    @(item.ScheduledTime ?? "Not set")
                                                </div>
                                            </td>
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    <i class="fas fa-map-marker-alt me-2 text-muted"></i>
                                                    @(item.Location?.l_Address1 ?? "No location")
                                                </div>
                                            </td>
                                            <td>
                                                <span class="badge @statusClass">@statusText</span>
                                            </td>
                                            <td class="text-center">
                                                <div class="btn-group" role="group">
                                                    <a asp-action="Edit" asp-route-id="@item.s_ID" class="btn btn-sm btn-outline-primary" title="Edit">
                                                        <i class="fas fa-edit"></i>
                                                    </a>
                                                    <a asp-action="Details" asp-route-id="@item.s_ID" class="btn btn-sm btn-outline-secondary" title="View Details">
                                                        <i class="fas fa-eye"></i>
                                                    </a>
                                                    <a asp-action="Delete" asp-route-id="@item.s_ID" class="btn btn-sm btn-outline-danger" title="Delete" onclick="return confirm('Are you sure you want to delete this schedule?')">
                                                        <i class="fas fa-trash-alt"></i>
                                                    </a>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="5" class="text-center py-4 text-muted">
                                            <i class="fas fa-calendar-times fa-2x mb-2"></i>
                                            <div>No schedules found</div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    // Safely get locations data
    let locations = [];
    try {
    @if (Model != null && Model.Any())
    {
        <text>
                    locations = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(
             Model.Where(s => s.Location != null && !string.IsNullOrEmpty(s.Location.l_Address1))
                  .Select(s => s.Location.l_Address1)
                  .Distinct()
                  .ToList()));
        </text>
    }
    } catch (e) {
        console.error('Error loading locations:', e);
        locations = [];
    }

    function filterLocations() {
        const input = document.getElementById("locationInput");
        const dropdown = document.getElementById("locationDropdown");

        if (!input || !dropdown) return;

        const inputValue = input.value.toLowerCase().trim();
        dropdown.innerHTML = "";

        if (inputValue && locations.length > 0) {
            const filteredLocations = locations.filter(loc =>
                loc && loc.toLowerCase().includes(inputValue)
            );

            if (filteredLocations.length > 0) {
                dropdown.style.display = "block";
                filteredLocations.forEach(loc => {
                    const option = document.createElement("option");
                    option.value = loc;
                    option.textContent = loc;
                    dropdown.appendChild(option);
                });
            } else {
                dropdown.style.display = "none";
            }
        } else {
            dropdown.style.display = "none";
        }
    }

    function selectLocation(selectElement) {
        const selectedLocation = selectElement.value;
        const input = document.getElementById("locationInput");
        if (input && selectedLocation) {
            input.value = selectedLocation;
            selectElement.style.display = "none";
        }
    }

    function searchSchedules() {
        const input = document.getElementById("searchInput");
        const table = document.getElementById("schedulesTable");

        if (!input || !table) return;

        const filter = input.value.toLowerCase();
        const rows = table.getElementsByTagName("tr");

        for (let i = 1; i < rows.length; i++) { // Skip header row
            const row = rows[i];
            const cells = row.getElementsByTagName("td");
            let found = false;

            for (let j = 0; j < cells.length - 1; j++) { // Skip actions column
                const cellText = cells[j].textContent || cells[j].innerText;
                if (cellText.toLowerCase().indexOf(filter) > -1) {
                    found = true;
                    break;
                }
            }

            row.style.display = found ? "" : "none";
        }
    }

    // Close dropdown when clicking outside
    document.addEventListener('click', function(event) {
        const locationInput = document.getElementById("locationInput");
        const dropdown = document.getElementById("locationDropdown");

        if (locationInput && dropdown &&
            !locationInput.contains(event.target) &&
            !dropdown.contains(event.target)) {
            dropdown.style.display = "none";
        }
    });

    // Form validation
    document.getElementById("filterForm").addEventListener("submit", function(e) {
        // Add any form validation logic here if needed
    });
</script>